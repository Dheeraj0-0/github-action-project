# A single name for the entire workflow
name: CI/CD Pipeline for Bank App

on:
  push:
    branches: [ "main" ]

jobs:
  # Job 1: Run security scans on the source code
  security-scans:
    name: Security Scans
    runs-on: ubuntu-latest # Changed to GitHub-hosted for simplicity
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Gitleaks Scan for hardcoded secrets
        uses: gitleaks/gitleaks-action@v2
        with:
          # Creates a report file and also fails the job if leaks are found
          report_format: json
          report_path: gitleaks-report.json

      - name: Trivy Filesystem Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          output: 'trivy-fs-report.txt'

  # Job 2: Compile, test, build the JAR, and run SonarQube analysis
  build-and-analyze:
    name: Build, Test, and Analyze
    runs-on: self-hosted # Kept as self-hosted as in original
    needs: security-scans # Runs after security scans are successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # SonarQube needs the full history to correctly analyze code
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Maven Build, Test, and Package
        run: mvn --batch-mode verify

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2 # Updated action name and version
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} # Use secrets for host URL for better security

      - name: Upload JAR artifact for the next job
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  # Job 3: Build a Docker image using the JAR from the previous job
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-analyze # Runs after the build is successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target/ # Download the JAR into the target directory

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # CORRECTED: Added a space after the colon
          tags: dockersinghh007/bankapp:latest

  # Job 4: Deploy the Docker image to Azure Kubernetes Service
  deploy-to-aks:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    needs: build-and-push-docker # Runs after the Docker image is pushed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Set kubectl context for AKS'
        uses: azure/aks-set-context@v3
        with:
          resource-group: 'MyK8sResourceGroup'
          cluster-name: 'MyAKSCluster'

      - name: 'Deploy to Kubernetes'
        run: |
          kubectl apply -f deployment.yaml
